{
  "contractName": "Ex8",
  "abi": [
    {
      "inputs": [],
      "name": "lastSender",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "lastValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "sendEther",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"lastSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sendEther\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Ex8.sol\":\"Ex8\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Ex8.sol\":{\"keccak256\":\"0xccd007601cabe5d1351cf9bdc89211e53bb2f7fcdf742ffe7304a42c611643e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b0fd6a53c0c6a84b3ef56420f79fa583687b9eec64ff13136d9cdc256190c43\",\"dweb:/ipfs/QmaWw8pQLXbXHHfadi1hnvUFTzux9ysbT1HGy9jxpy61J3\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060e38061001f6000396000f3fe60806040526004361060305760003560e01c80630e29df22146035578063256fec881460515780634318383414608c575b600080fd5b604f600080546001600160a01b0319163317905534600155565b005b348015605c57600080fd5b50600054606f906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b348015609757600080fd5b5060a060015481565b604051908152602001608356fea2646970667358221220c55ec7b5e90917bfd08dc93473f28600bc3c363d989a83f10950e45b09ee9fb164736f6c63430008130033",
  "deployedBytecode": "0x60806040526004361060305760003560e01c80630e29df22146035578063256fec881460515780634318383414608c575b600080fd5b604f600080546001600160a01b0319163317905534600155565b005b348015605c57600080fd5b50600054606f906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b348015609757600080fd5b5060a060015481565b604051908152602001608356fea2646970667358221220c55ec7b5e90917bfd08dc93473f28600bc3c363d989a83f10950e45b09ee9fb164736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:401:8",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:8",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:102:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:8"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "198:3:8",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "203:1:8",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "194:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "194:11:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "207:1:8",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "190:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "190:19:8"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:32:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:51:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:51:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:8",
                "type": ""
              }
            ],
            "src": "14:203:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "323:76:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "333:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "345:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "356:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "341:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "341:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "333:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "375:9:8"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "386:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "368:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "368:25:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "368:25:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "292:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "303:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "314:4:8",
                "type": ""
              }
            ],
            "src": "222:177:8"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
      "id": 8,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "57:187:7:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "57:187:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;135:107;;181:10;:23;;-1:-1:-1;;;;;;181:23:7;194:10;181:23;;;226:9;181:23;214:21;135:107;;;76:25;;;;;;;;;;-1:-1:-1;76:25:7;;;;-1:-1:-1;;;;;76:25:7;;;;;;-1:-1:-1;;;;;178:32:8;;;160:51;;148:2;133:18;76:25:7;;;;;;;;107:21;;;;;;;;;;;;;;;;;;;368:25:8;;;356:2;341:18;107:21:7;222:177:8",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract Ex8 {\n    address public lastSender;\n    uint public lastValue;\n\n    function sendEther() public payable {\n        lastSender = msg.sender;\n        lastValue = msg.value;\n    }\n}",
  "sourcePath": "/home/ielayade/MUS/blockchain/exam/smart-contracts/contracts/Ex8.sol",
  "ast": {
    "absolutePath": "project:/contracts/Ex8.sol",
    "exportedSymbols": {
      "Ex8": [
        225
      ]
    },
    "id": 226,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 206,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:7"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Ex8",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 225,
        "linearizedBaseContracts": [
          225
        ],
        "name": "Ex8",
        "nameLocation": "66:3:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "256fec88",
            "id": 208,
            "mutability": "mutable",
            "name": "lastSender",
            "nameLocation": "91:10:7",
            "nodeType": "VariableDeclaration",
            "scope": 225,
            "src": "76:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 207,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "76:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "43183834",
            "id": 210,
            "mutability": "mutable",
            "name": "lastValue",
            "nameLocation": "119:9:7",
            "nodeType": "VariableDeclaration",
            "scope": 225,
            "src": "107:21:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 209,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "107:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 223,
              "nodeType": "Block",
              "src": "171:71:7",
              "statements": [
                {
                  "expression": {
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 213,
                      "name": "lastSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "181:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 214,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "194:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "198:6:7",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "194:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "181:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "181:23:7"
                },
                {
                  "expression": {
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 218,
                      "name": "lastValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 210,
                      "src": "214:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 219,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "226:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "230:5:7",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "226:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "214:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "214:21:7"
                }
              ]
            },
            "functionSelector": "0e29df22",
            "id": 224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendEther",
            "nameLocation": "144:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "153:2:7"
            },
            "returnParameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "171:0:7"
            },
            "scope": 225,
            "src": "135:107:7",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 226,
        "src": "57:187:7",
        "usedErrors": []
      }
    ],
    "src": "32:212:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {
    "1746914393389": {
      "events": {},
      "links": {},
      "address": "0xA641480efA147D9A92FdC02C07368FE3A94Bd64E",
      "transactionHash": "0x4f492df38fc86ed25e575d6ab8e058733297e54c91431d6a0a7f4a0b893ba0ed"
    },
    "1747244458685": {
      "events": {},
      "links": {},
      "address": "0x3B267908aAa4624E88331279176B25633C2b6301",
      "transactionHash": "0x055cbaf52ea087629b50708b6db8559f26916ecab61583e410b3699d5d381f63"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-05-14T17:42:12.702Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}